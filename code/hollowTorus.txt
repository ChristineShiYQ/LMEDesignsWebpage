import java.lang.reflect.*;

class cParams
{
  float ringRad = 20.0;  
  float ballRad = 3.0;
  int numRepeats1 = 3; 
  int numRepeats2 = 4; 
  int numRepeats3 = 5; 
}
cLattice latticeMaker(cParams params)
{  
  float r = 3.0;
  
  // create brick lattice
  cLattice structure = new cLattice();
  
  // design the ball cloud 
  cBallCloud bC = new cBallCloud();
  bC.addBall(300,0,0, r);
    
  // set ball color
  for(int i=0; i<bC.mBalls.size(); i++){bC.setBallColor(i,bronze);}
  
  // add ball cloud
  structure.addBallCloud(bC);
  
  // define beams
  structure.addInterBeam(0,0,1,0,0); // xBeam
  structure.addInterBeam(0,0,0,1,0); // yBeam
  structure.addInterBeam(0,0,0,0,1); // zBeam
  
  // define beam color  
  for(int i=0; i<structure.numBeamsInCloud(); i++){structure.setBeamColor(i,contrastingColors[gC++]);}
  
  // define a transform for pattern
  cTransform s1 = new cTransform(), s2 = new cTransform(), s3 = new cTransform();
  int n1=7, n2=20, n3=50;
  s1.translate(4.*r,0,0);
  s1.scale(1.1);
  s2.rotate(2.0*PI/(float)n2, V(0,0,1.0));
  
  s3.translate(0,0,32.*r);
  s3.rotate(2.0*PI/(float)n3, V(0,1.0,0));
  
  // closeDirection
  structure.closeDirection2();
  structure.closeDirection3();
  
  // applyTransform
  structure.addTransforms(s1,s2,s3,n1,n2,n3);
  
  // return the tower object
  return structure;
}
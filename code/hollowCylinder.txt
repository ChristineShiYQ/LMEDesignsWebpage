import java.lang.reflect.*;

class cParams
{
  float ringRad = 200.0;  
  float ballRad = 5.0;  
  int numCells = 5;  
  int numRepeats = 9;
  float scale = 0.79;
  float reinforcementDepth = 50.0;
  float quadric = 0.5;
}
cLattice latticeMaker(cParams params)
{  
  float r = params.ballRad;
  float s = params.scale;
  
  // create lattice object
  cLattice structure = new cLattice();
  
  // design the ball cloud 
  cBallCloud bC = new cBallCloud();
  bC.addBall(200,0,0,r); 
      
  // set ball color
  for(int i=0; i<bC.mBalls.size(); i++){bC.setBallColor(i,bronze);}
  
  // add ball cloud
  structure.addBallCloud(bC);
  
  // define beams
  structure.addInterBeam(0,0,1,0,0); // xBeam
  structure.addInterBeam(0,0,0,1,0); // yBeam
  structure.addInterBeam(0,0,0,0,1); // zBeam
  
  // define beam color  
  for(int i=0; i<structure.numBeamsInCloud(); i++){structure.setBeamColor(i,contrastingColors[gC++]);}
  
  // define transforms
  cTransform s1 = new cTransform(), s2 = new cTransform(), s3 = new cTransform();
  int n1 = 5, n2=20, n3=20;
  
  s1.translate(10.*r,0,0);
  s2.rotate(2.0*PI/(float)n2, V(0,0,1.0));
  s3.translate(0,0,10.*r);
 
  // closeDirection
  structure.closeDirection2();
  
  // apply transform
  structure.addTransforms(s1,s2,s3,n1,n2,n3);
  
  // return structure
  return structure;
}